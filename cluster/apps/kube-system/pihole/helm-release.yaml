---
apiVersion: helm.toolkit.fluxcd.io/v1beta1
kind: HelmRelease
metadata:
  name: pihole
  namespace: kube-system
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://mojo2600.github.io/pihole-kubernetes
      chart: pihole
      version: 2.4.2
      sourceRef:
        kind: HelmRepository
        name: mojo2600-pihole
        namespace: flux-system
      interval: 5m
  install:
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
      remediateLastFailure: true
      # cleanupOnFail: true
  rollback:
    timeout: 10m
    recreate: true
    # cleanupOnFail: true
  values:
    replicaCount: 1
    strategyType: RollingUpdate
    # -- The maximum number of Pods that can be created over the desired number of `ReplicaSet` during updating.
    maxSurge: 1
    # -- The maximum number of Pods that can be unavailable during updating
    maxUnavailable: 0
    image:
      repository: "pihole/pihole"
      tag: v5.8.1
    serviceDns:
      mixedService: false
      type: LoadBalancer
      loadBalancerIP: 192.168.1.12
      annotations:
        metallb.universe.tf/address-pool: default
        metallb.universe.tf/allow-shared-ip: pihole-svc
    serviceDhcp:
      enabled: true
      type: LoadBalancer
      loadBalancerIP: 192.168.1.13
      annotations:
        metallb.universe.tf/address-pool: default
    persistentVolumeClaim:
      enabled: true
      storageClass: nfs-kube
    ingress:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: "internal"
        nginx.ingress.kubernetes.io/enable-cors: "true"
        nginx.ingress.kubernetes.io/cors-allow-origin: "https://homer.${DOMAIN}"
      hosts:
        - "pihole.internal.${DOMAIN}"
      tls:
        - hosts:
            - "pihole.internal.${DOMAIN}"
    extraEnvVars:
      TZ: America/Chicago
    DNS1: "1.1.1.1"
    DNS2: "1.0.0.1"
    adminPassword: "${PASSWORD}"
    dnsmasq:
        # -- Add custom dns entries to override the dns resolution. All lines will be added to the pihole dnsmasq configuration.
      customDnsEntries:
        - "address=/pihole.internal.${DOMAIN}/192.168.1.10"
        - "address=/red.internal.${DOMAIN}/192.168.1.10"
        - "address=/jackett.internal.${DOMAIN}/192.168.1.10"
        - "address=/radarr.internal.${DOMAIN}/192.168.1.10"
        - "address=/readarr.internal.${DOMAIN}/192.168.1.10"
        - "address=/sonarr.internal.${DOMAIN}/192.168.1.10"

      # -- Add upstream dns servers. All lines will be added to the pihole dnsmasq configuration
      upstreamServers: []
      # - server=/foo.bar/192.168.178.10
      # - server=/bar.foo/192.168.178.11

      # -- Dnsmasq reads the /etc/hosts file to resolve ips. You can add additional entries if you like
      additionalHostsEntries: []
      # - 192.168.0.3     host4
      # - 192.168.0.4     host5

      # -- Static DHCP config
      staticDhcpEntries: []
      # staticDhcpEntries:
      # - dhcp-host=MAC_ADDRESS,IP_ADDRESS,HOSTNAME

      # -- Other options
      customSettings:
      # otherSettings:
      # - rebind-domain-ok=/plex.direct/

      # -- Here we specify custom cname entries that should point to `A` records or
      # elements in customDnsEntries array.
      # The format should be:
      #  - cname=cname.foo.bar,foo.bar
      #  - cname=cname.bar.foo,bar.foo
      #  - cname=cname record,dns record
      customCnameEntries: []
      # Here we specify custom cname entries that should point to `A` records or
      # elements in customDnsEntries array.
      # The format should be:
      #   - cname=cname.foo.bar,foo.bar
      #   - cname=cname.bar.foo,bar.foo
      #   - cname=cname record,dns record

    # -- list of adlists to import during initial start of the container
    adlists:
      - https://raw.githubusercontent.com/kboghdady/youTube_ads_4_pi-hole/master/youtubelist.txt

    # -- list of whitelisted domains to import during initial start of the container
    whitelist:
      - s.youtube.com
      

    # -- list of blacklisted domains to import during initial start of the container
    blacklist: {}
      # If you want to have special domains blacklisted, add them here
      # - *.blackist.com

    # -- list of blacklisted regex expressions to import during initial start of the container
    regex: {}
      # Add regular expression blacklist items
      # - (^|\.)facebook\.com$
