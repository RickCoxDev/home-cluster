---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: sonarr
  namespace: media
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com/charts/
      chart: sonarr
      version: 16.3.2
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home
        namespace: flux-system
      interval: 5m
  install:
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
      remediateLastFailure: true
      # cleanupOnFail: true
  rollback:
    timeout: 10m
    recreate: true
    # cleanupOnFail: true
  dependsOn:
    - name: nfs-subdir-external-provisioner
      namespace: storage
    - name: cert-manager
      namespace: networking
    - name: ingress-nginx
      namespace: networking
  values:
    image:
      repository: linuxserver/sonarr
      tag: develop-version-3.0.6.1301
    env:
      TZ: "${TIMEZONE}"
    ingress:
      main:
        enabled: true
        hosts:
          - host: "sonarr.${DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - "sonarr.${DOMAIN}"
    persistence:
      config:
        enabled: true
        storageClass: nfs-kube
      media:
        enabled: true
        mountPath: /tv-shows
        existingClaim: tv-shows

    prometheus:
      # -- Enable and configure a Prometheus podMonitor for the chart under this key.
      # See also the notes under `additionalContainers`.
      # @default -- See values.yaml
      podMonitor:
        enabled: false
        interval: 3m
        scrapeTimeout: 1m
        additionalLabels: {}

        # # When using the prometheus.podMonitor the following
        # # container is required
        # additionalContainers:
        # - name: exportarr
        #   image: ghcr.io/onedr0p/exportarr:v0.6.0
        #   imagePullPolicy: IfNotPresent
        #   args: ["exportarr", "sonarr"]
        #   env:
        #   - name: PORT
        #     value: "32123"
        #   - name: URL
        #     value: "http://localhost"
        #   - name: CONFIG
        #     value: "/config/config.xml"
        #   ports:
        #   - name: exportarr
        #     containerPort: 32123
        #   volumeMounts:
        #   - name: config
        #     mountPath: /config
        #     readOnly: true
